@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model dotnetprojekt.Models.WineReviewEditViewModel

@{
}
<div class="bg-gradient-to-br from-beige-100 to-beige-200 min-h-screen py-10">
    <div class="container mx-auto px-4 max-w-2xl">
        <div class="mb-6">
            <a href="@Url.Action("Index", "Account")" class="text-wine-600 hover:text-wine-800 font-medium flex items-center inline-block transition-colors">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                </svg>
                Back to My Ratings
            </a>
        </div>

        <div class="bg-white rounded-3xl shadow-2xl overflow-hidden border border-beige-300">
            <div class="p-6 bg-beige-100 border-b border-beige-200">
                <h1 class="text-2xl font-bold text-gray-800">Edit Rating</h1>
                <p class="text-gray-600 text-sm">Update your review and rating for @Model.WineName</p>
            </div>

            <div class="p-8">
                <form asp-action="EditReview" method="post" enctype="multipart/form-data" class="space-y-6">
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="WineId" />

                    <div class="mb-4">
                        <label class="block text-sm font-medium text-gray-700 mb-1">Wine</label>
                        <input type="text" value="@Model.WineName" disabled
                        class="w-full px-4 py-2 bg-gray-100 border border-gray-300 rounded-lg cursor-not-allowed" />
                    </div>

                    <div>
                        <label asp-for="RatingValue" class="block text-sm font-medium text-gray-700 mb-1">Rating</label>
                        <input asp-for="RatingValue" type="number" step="0.5" min="0" max="5"
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-wine-600 focus:border-transparent" />
                        <span asp-validation-for="RatingValue" class="text-sm text-red-600"></span>
                    </div>

                    <div>
                        <label asp-for="Description" class="block text-sm font-medium text-gray-700 mb-1">Review</label>
                        <textarea asp-for="Description" rows="4"
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-wine-600 focus:border-transparent resize-none"
                        placeholder="Write your thoughts about this wine..."></textarea>
                        <span asp-validation-for="Description" class="text-sm text-red-600"></span>
                    </div>

                    <!-- Image Upload Section -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Provided Review Image</label>
                        <div class="flex items-center gap-4">
                            @if (!string.IsNullOrEmpty(Model.ImagePath))
                            {
                                <div class="flex flex-col items-start gap-2 mb-4">
                                    <img src="@Model.ImagePath" alt="Review Image" class="w-24 h-24 object-cover rounded-md border" />
                                    <label class="flex items-center text-sm text-gray-700">
                                        <input type="checkbox" name="RemoveImage" value="true" class="mr-2">
                                        Remove image from review
                                    </label>
                                </div>
                            }
                            else
                            {
                                <p class="text-gray-500 italic mb-4">No description provided.</p>
                            }
                        </div>
                        
                    </div>

                    <div class="pt-8">
                        <label asp-for="ReviewImage" class="block text-gray-700 font-semibold mb-2">Add a new Photo <span class="text-xs text-gray-400">(optional)</span></label>
                        <div id="dropArea" class="flex flex-col items-center justify-center w-full h-48 border-2 border-dashed border-gray-300 rounded-lg bg-gray-50 hover:bg-gray-100 transition cursor-pointer relative focus-within:ring-2 focus-within:ring-wine-600">
                            <input asp-for="ReviewImage" id="ReviewImage" type="file" class="absolute inset-0 opacity-0 cursor-pointer" accept=".jpg,.jpeg,.png" aria-label="Upload review image" />
                            <div id="uploadPlaceholder" class="flex flex-col items-center justify-center pointer-events-none">
                                <svg class="w-10 h-10 mb-2 text-gray-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M4 16v2a2 2 0 002 2h12a2 2 0 002-2v-2M7 10l5-5m0 0l5 5m-5-5v12" />
                                </svg>
                                <span class="text-gray-500 text-sm">Drag & drop or click to upload</span>
                                <span class="text-xs text-gray-400">JPG, JPEG, PNG (max 5MB)</span>
                            </div>
                            <div id="imagePreview" class="hidden absolute inset-0 flex flex-col items-center justify-center bg-white bg-opacity-90">
                                <img id="previewImg" class="max-h-32 max-w-xs rounded shadow mb-2" src="#" alt="Preview">
                                <button type="button" id="removeImgBtn" class="text-red-600 hover:underline text-xs">Remove</button>
                            </div>
                        </div>
                        <span asp-validation-for="ReviewImage" class="text-sm text-red-600"></span>
                    </div>

                    <div class="flex justify-end gap-3 pt-6">
                        <a href="@Url.Action("Index", "Account")"
                           class="bg-gray-200 text-gray-700 py-3 px-5 rounded-lg hover:bg-gray-300 transition">Cancel</a>
                        <button type="submit"
                                class="bg-wine-600 text-white py-3 px-6 rounded-xl shadow hover:bg-wine-700 transition-colors font-medium focus:outline-none focus:ring-2 focus:ring-wine-600">
                            Save Review
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const dropArea = document.getElementById('dropArea');
        const fileInput = document.getElementById('ReviewImage');
        const uploadPlaceholder = document.getElementById('uploadPlaceholder');
        const imagePreview = document.getElementById('imagePreview');
        const previewImg = document.getElementById('previewImg');
        const removeBtn = document.getElementById('removeImgBtn');

        // Zapobiegamy domyślnemu zachowaniu przy drag&drop
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, e => {
                e.preventDefault();
                e.stopPropagation();
            });
        });

        // Styl podczas przeciągania nad obszarem
        ['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, () => {
                dropArea.classList.add('bg-gray-100');
            });
        });
        ['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, () => {
                dropArea.classList.remove('bg-gray-100');
            });
        });

        // Obsługa wrzucenia pliku
        dropArea.addEventListener('drop', e => {
            const files = e.dataTransfer.files;
            if (files.length) {
                fileInput.files = files;
                showPreview(files[0]);
            }
        });

        // Obsługa wyboru przez kliknięcie
        fileInput.addEventListener('change', () => {
            if (fileInput.files.length) {
                showPreview(fileInput.files[0]);
            }
        });

        // Funkcja wyświetlająca podgląd
        function showPreview(file) {
            const reader = new FileReader();
            reader.onload = e => {
                previewImg.src = e.target.result;
                uploadPlaceholder.classList.add('hidden');
                imagePreview.classList.remove('hidden');
            };
            reader.readAsDataURL(file);
        }

        // Usunięcie podglądu i przywrócenie stanu początkowego
        removeBtn.addEventListener('click', () => {
            fileInput.value = '';
            previewImg.src = '#';
            imagePreview.classList.add('hidden');
            uploadPlaceholder.classList.remove('hidden');
        });
    });
</script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}